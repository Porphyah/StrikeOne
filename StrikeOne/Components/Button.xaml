<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RNDSB_ClientTS">
    <Style x:Key="MenuButtonStyle" x:Name="MenuButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="DodgerBlue"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush>
                    <LinearGradientBrush.RelativeTransform>
                        <RotateTransform Angle="90"/>
                    </LinearGradientBrush.RelativeTransform>
                    <GradientStopCollection>
                        <GradientStop Color="#001E90FF" Offset="0.05"/>
                        <GradientStop Color="DodgerBlue" Offset="0.5"/>
                        <GradientStop Color="#001E90FF" Offset="0.95"/>
                    </GradientStopCollection>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0" BlurRadius="5" Color="DodgerBlue"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="5,5,5,5">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(ButtonBase.Background).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#881E90FF">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(ButtonBase.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="White">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(ButtonBase.Background).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Transparent">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(ButtonBase.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="DodgerBlue">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <BeginStoryboard x:Name="MouseLeave_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <BeginStoryboard x:Name="MouseEnter_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter}"/>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="#ADADAD"/>
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <Setter Property="Effect" Value="{x:Null}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ModeButtonStyle" x:Name="ModeButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#DDFFFFFF"/>
        <Setter Property="Foreground" Value="DodgerBlue"/>
        <Setter Property="BorderBrush" Value="DodgerBlue"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Height="100" Width="50">
                        <Grid.Effect>
                            <DropShadowEffect ShadowDepth="1" BlurRadius="5"/>
                        </Grid.Effect>
                        <Ellipse x:Name="BackgroundEllipse" VerticalAlignment="Bottom" Height="50" Margin="0"
                                 Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2.5" Fill="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                        <ContentPresenter x:Name="Content" Height="40" Width="40"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                          HorizontalAlignment="Center" Margin="5,0,5,5" VerticalAlignment="Bottom"
                                          Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Line X1="25" Y1="0" X2="25" Y2="50" Stroke="DodgerBlue"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OptionButtonStyle" x:Name="OptionButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#DDFFFFFF"/>
        <Setter Property="Foreground" Value="DodgerBlue"/>
        <Setter Property="BorderBrush" Value="DodgerBlue"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Height="50" Width="100">
                        <Grid.Effect>
                            <DropShadowEffect ShadowDepth="1" BlurRadius="5"/>
                        </Grid.Effect>
                        <Path Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"
                              StrokeThickness="2">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="100,1">
                                        <LineSegment Point="30,1"/>
                                        <ArcSegment Point="30,49" Size="24,24"/>
                                        <LineSegment Point="100,49"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <ContentPresenter x:Name="Content" Height="40" Width="40"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                          HorizontalAlignment="Left" Margin="25,0,0,0" VerticalAlignment="Center"
                                          Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <TextBlock x:Name="Text" Margin="0,0,5,0" HorizontalAlignment="Right" VerticalAlignment="Center" Width="25" TextWrapping="Wrap"
                                   Focusable="False" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Tag}">
                            <TextBlock.Effect>
                                <DropShadowEffect ShadowDepth="1" BlurRadius="5" Color="Black"/>
                            </TextBlock.Effect>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultBlueButtonStyle" x:Name="DefaultBlueButton" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="DodgerBlue"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="#88FFFFFF"/>
        <Setter Property="Foreground" Value="DodgerBlue"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="15,0,15,0">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseEnter">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="DodgerBlue">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="White">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseLeave">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#88FFFFFF">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseIn"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="DodgerBlue">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseIn"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <BeginStoryboard x:Name="MouseLeave_BeginStoryboard" Storyboard="{StaticResource MouseLeave}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <BeginStoryboard x:Name="MouseEnter_BeginStoryboard" Storyboard="{StaticResource MouseEnter}"/>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="#ADADAD"/>
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultGreenButtonStyle" x:Name="DefaultGreenButton" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="LimeGreen"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="#88FFFFFF"/>
        <Setter Property="Foreground" Value="LimeGreen"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="15,0,15,0">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseEnter">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="LimeGreen">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="White">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseLeave">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#88FFFFFF">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseIn"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="LimeGreen">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseIn"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <BeginStoryboard x:Name="MouseLeave_BeginStoryboard" Storyboard="{StaticResource MouseLeave}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <BeginStoryboard x:Name="MouseEnter_BeginStoryboard" Storyboard="{StaticResource MouseEnter}"/>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="#ADADAD"/>
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultRedButtonStyle" x:Name="DefaultRedButton" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="OrangeRed"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="#88FFFFFF"/>
        <Setter Property="Foreground" Value="OrangeRed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="15,0,15,0">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseEnter">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="OrangeRed">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="White">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseLeave">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#88FFFFFF">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseIn"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="{x:Null}">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="OrangeRed">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <ExponentialEase EasingMode="EaseIn"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <BeginStoryboard x:Name="MouseLeave_BeginStoryboard" Storyboard="{StaticResource MouseLeave}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <BeginStoryboard x:Name="MouseEnter_BeginStoryboard" Storyboard="{StaticResource MouseEnter}"/>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="#ADADAD"/>
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EmptyButton" x:Name="EmptyButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>